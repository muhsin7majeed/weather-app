{"version":3,"sources":["components/videos sync /^/.//.*$","components/videos/clear-day.gif","components/videos/clear-night.gif","components/videos/clouds.gif","components/videos/default.jpg","components/videos/fog.gif","components/videos/partly-cloudy-day.gif","components/videos/partly-cloudy-night.gif","components/videos/rain.gif","components/videos/sleet.gif","components/videos/snow.gif","components/videos/wind.gif","components/About.js","components/Intro.js","components/Weather.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["map","./clear-day.gif","./clear-night.gif","./clouds.gif","./default.jpg","./fog.gif","./partly-cloudy-day.gif","./partly-cloudy-night.gif","./rain.gif","./sleet.gif","./snow.gif","./wind.gif","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","About","react_default","a","createElement","className","href","Intro","require","config","Dat","Date","time","toLocaleString","hour","minute","hour12","darkSkyKey","process","openCageKey","Weather","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getLocation","navigator","geolocation","getCurrentPosition","showLocation","getPos","lat","coords","latitude","long","longitude","darkSkyApi","concat","openCageApi","fetch","then","data","json","res","setState","weather","tempC","currently","temperature","tempF","summary","icon","state","gif","place","results","formatted","day","getDate","month","getMonth","year","getFullYear","curTime","_this$state$time","_this$state$weather","src","alt","onClick","Component","Main","Weather_Weather","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","style","position","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.458f30f5.chunk.js","sourcesContent":["var map = {\n\t\"./clear-day.gif\": 21,\n\t\"./clear-night.gif\": 22,\n\t\"./clouds.gif\": 23,\n\t\"./default.jpg\": 24,\n\t\"./fog.gif\": 25,\n\t\"./partly-cloudy-day.gif\": 26,\n\t\"./partly-cloudy-night.gif\": 27,\n\t\"./rain.gif\": 28,\n\t\"./sleet.gif\": 29,\n\t\"./snow.gif\": 30,\n\t\"./wind.gif\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/clear-day.49d27cc7.gif\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.222d4ebd.gif\";","module.exports = __webpack_public_path__ + \"static/media/clouds.b6903f6c.gif\";","module.exports = __webpack_public_path__ + \"static/media/default.a64a0212.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog.b760f2ce.gif\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.b30bba5b.gif\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.99cb646d.gif\";","module.exports = __webpack_public_path__ + \"static/media/rain.c1a93a1d.gif\";","module.exports = __webpack_public_path__ + \"static/media/sleet.78a2a10a.gif\";","module.exports = __webpack_public_path__ + \"static/media/snow.cb5d8d80.gif\";","module.exports = __webpack_public_path__ + \"static/media/wind.92819ee7.gif\";","import React from \"react\";\nimport \"./Style.css\";\nexport default function About() {\n  return (\n    <div>\n      <div className=\"jumbotron jumbo-bg bg-dark\">\n        <p className=\"text-muted blockquote text-center\">\n          We do not store your personal data such as your location, this app\n          only has local storage, it means the data will be gone once you leave\n          the app.\n        </p>\n        <br />\n        <h3>About This App</h3>\n        <p className=\"text-justify\">\n          Hi I'm <a href=\"https://www.github.com/muhsin7majeed\">Muhsin</a>. I\n          made this Weather-App to learn react-js. This is just a simple web-app\n          that fetches weather details from{\" \"}\n          <a href=\"https://darksky.net/dev\">Dark Sky Api</a>. I tried to add a\n          search field, but couldn't find a FREE api to get location details (\n          google maps api throws 'request limit reached ' error :p). So, now\n          this app only shows weather for your current location. (That too is\n          not accurate :( ) Also it has a problem with getting geolocation of\n          mobile devices.\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Style.css\";\nexport default function Intro() {\n  return (\n    <div className=\"text-center intro-bg\">\n      <h1 className=\"m-3\">Get weather in your location</h1>\n      <p >\n        Press the button and allow location access to get weather in current\n        location.\n      </p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./Style.css\";\nrequire(\"dotenv\").config();\n\nconst Dat = new Date();\n\nvar time = new Date().toLocaleString(\"en-US\", {\n  hour: \"numeric\",\n  minute: \"numeric\",\n  hour12: true\n});\n\nconst darkSkyKey = process.env.REACT_APP_DARK_SKY_KEY;\nconst openCageKey = process.env.REACT_APP_OPEN_CAGE_DATA_KEY;\n\nexport default class Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \" - - - \",\n      time: {\n        day: Dat.getDate(),\n        month: Dat.getMonth(),\n        year: Dat.getFullYear(),\n        curTime: time\n      },\n      weather: {\n        tempC: \"-\",\n        tempF: \"-\",\n        summary: \"-\",\n        icon: \"-\"\n      },\n      gif: \"default.jpg\"\n    };\n  }\n\n  getLocation = () => {\n    navigator.geolocation.getCurrentPosition(this.showLocation);\n  };\n\n  showLocation = getPos => {\n    const lat = getPos.coords.latitude;\n    const long = getPos.coords.longitude;\n\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\n    const darkSkyApi = `${proxy}https://api.darksky.net/forecast/${darkSkyKey}/${lat},${long}/?units=si`;\n    const openCageApi = `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=${openCageKey}`;\n\n    fetch(darkSkyApi)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({\n          weather: {\n            tempC: res.currently.temperature,\n            tempF: (res.currently.temperature * 9) / 5 + 32,\n            summary: res.currently.summary,\n            icon: res.currently.icon\n          }\n        });\n\n        switch (res.currently.icon) {\n          case \"cloudy\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-cloud\" />\n              },\n              gif: \"clouds.gif\"\n            });\n            break;\n          case \"clear-day\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-sun\" />\n              },\n              gif: \"clear-day.gif\"\n            });\n            break;\n          case \"clear-night\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-moon\" />\n              },\n              gif: \"clear-night.gif\"\n            });\n            break;\n          case \"rain\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-cloud-rain\" />\n              },\n              gif: \"rain.gif\"\n            });\n            break;\n          case \"snow\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-snowflake\" />\n              },\n              gif: \"snow.gif\"\n            });\n            break;\n          case \"sleet\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-snowflake\" />\n              },\n              gif: \"sleet.gif\"\n            });\n            break;\n          case \"wind\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-wind\" />\n              },\n              gif: \"wind.gif\"\n            });\n            break;\n          case \"fog\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-smog\" />\n              },\n              gif: \"fog.gif\"\n            });\n            break;\n          case \"partly-cloudy-day\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-cloud-sun\" />\n              },\n              gif: \"partly-cloudy-day.gif\"\n            });\n            break;\n          case \"partly-cloudy-night\":\n            this.setState({\n              weather: {\n                tempC: this.state.weather.tempC,\n                tempF: this.state.weather.tempF,\n                summary: this.state.weather.summary,\n                icon: <i className=\"fa fa-cloud-moon\" />\n              },\n              gif: \"partly-cloudy-night.gif\"\n            });\n            break;\n\n          default:\n            this.setState({\n              weather: {\n                icon: \"-\"\n              },\n              gif: \"default.jpg\"\n            });\n            break;\n        }\n      });\n\n    fetch(openCageApi)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({\n          place: res.results[0].formatted\n        });\n      });\n  };\n  componentDidMount() {}\n\n  render() {\n    const { day, month, year, curTime } = this.state.time;\n    const { tempC, tempF, summary, icon } = this.state.weather;\n    return (\n      <div>\n        <div>\n          <div className=\"gif-container\">\n            <img\n              className=\"background-gif\"\n              src={require(`./videos/${this.state.gif}`)}\n              alt=\"loading...\"\n            />\n          </div>\n\n          <button className=\"mb-3 btn btn-primary\" onClick={this.getLocation}>\n            Get Weather\n          </button>\n          <div className=\"time-and-place\">\n            {this.state.place} <br />\n            {day} - {month} - {year} <br /> {curTime}\n          </div>\n          <div>\n            <div className=\"Weather-temp-flex \">\n              <span className=\"weather-icon\">{icon}</span>\n              <span className=\"weather-temperature\">\n                {tempC}℃ <br /> {tempF}℉\n              </span>\n              <span className=\"weather-summary\">{summary}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Style.css\";\nimport About from \"./About\";\nimport Intro from \"./Intro\";\nimport Weather from \"./Weather\";\nrequire(\"dotenv\").config();\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div>\n        <Intro />\n        <div className=\"text-centerr\">\n          <Weather />\n          <About />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Style.css\";\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n        <a className=\"navbar-brand\" href=\"/\">\n          RWA\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav ml-auto\">\n            <a\n              className=\"nav-item nav-link active\"\n              href=\"https://github.com/muhsin7majeed/weather-app\"\n            >\n              Github <span className=\"sr-only\">(current)</span>\n            </a>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Main from \"./components/Main\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ position: \"relative\" }}>\n        <Main />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}